// Generated by CoffeeScript 1.10.0
var config, http, keychain, querystring, server, updateARecord, url;

http = require('http');

url = require('url');

querystring = require('querystring');

config = require('config');

keychain = require('keychain');

updateARecord = require('./update-a-record');

server = http.createServer();

server.on('request', function(req, res) {
  var ip, onError, query, ref, ref1;
  onError = function(message, code) {
    if (message == null) {
      message = 'Unknown Error';
    }
    if (code == null) {
      code = 500;
    }
    console.error(message);
    res.statusCode = code;
    return res.end(message);
  };
  ip = (ref = querystring.parse((ref1 = url.parse(req.url)) != null ? ref1.query : void 0)) != null ? ref.ip : void 0;
  if (!ip) {
    return onError('No IP address given.', 400);
  }
  query = {
    type: 'internet',
    service: 'INWX',
    account: config.user
  };
  return keychain.getPassword(query, function(err, password) {
    if (err) {
      return onError(err.message, 500);
    }
    return updateARecord(config.user, password, 'jannisr.de', 'zuhause', ip).then(function(responses) {
      var i, len, response, results;
      results = [];
      for (i = 0, len = responses.length; i < len; i++) {
        response = responses[i];
        console.log(response.name + " -> " + response.content);
        results.push(res.end(response.name + " -> " + response.content));
      }
      return results;
    })["catch"](function(err) {
      return onError(err.message, 500);
    });
  });
});

server.listen(config.port);

console.log("Server listening on " + config.port + ".");
